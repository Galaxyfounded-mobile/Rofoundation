local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5 + 0 ),v7("\0\94","\26\46\112\87"),function(v42) if (v9(v42,2)==79) then local v94=0;while true do if (v94==0) then v30=v8(v11(v42,773 -(201 + 571) ,1));return "";end end else local v95=v10(v8(v42,16));if v30 then local v103=0;local v104;while true do if (v103==0) then v104=v13(v95,v30);v30=nil;v103=1;end if (v103==1) then return v104;end end else return v95;end end end);local function v31(v43,v44,v45) if v45 then local v96=0;local v97;while true do if (v96==0) then v97=(v43/(2^(v44-1)))%(2^(((v45-(1139 -(116 + 1022))) -(v44-(4 -3))) + 1)) ;return v97-(v97%(2 -1)) ;end end else local v98=0;local v99;while true do if (v98==0) then v99=(2 + 0)^(v44-(3 -2)) ;return (((v43%(v99 + v99))>=v99) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (1==v46) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (0==v51) then v52,v53,v54,v55=v9(v27,v29,v29 + (8 -5) );v29=v29 + 4 ;v51=1;end if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==0) then v57=v34();v58=v34();v56=1;end if (v56==1) then v59=1;v60=(v31(v58,1 -0 ,20) * (2^32)) + v57 ;v56=2;end if (v56==2) then v61=v31(v58,74 -53 ,31);v62=((v31(v58,32)==1) and  -(2 -1)) or 1 ;v56=3;end if (v56==3) then if (v61==0) then if (v60==0) then return v62 * (619 -(555 + 64)) ;else local v125=0;while true do if (v125==0) then v61=1;v59=931 -(857 + 74) ;break;end end end elseif (v61==(2906 -(814 + 45))) then return ((v60==0) and (v62 * (1/(568 -(367 + 201))))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^(979 -(214 + 713))))) ;end end end local function v36(v63) local v64=0;local v65;local v66;while true do if (v64==2) then v66={};for v105=1, #v65 do v66[v105]=v10(v9(v11(v65,v105,v105)));end v64=3;end if (v64==1) then v65=v11(v27,v29,(v29 + v63) -1 );v29=v29 + v63 ;v64=2;end if (v64==3) then return v14(v66);end if (v64==0) then v65=nil;if  not v63 then v63=v34();if (v63==0) then return "";end end v64=1;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v67=0;local v68;local v69;local v70;local v71;local v72;local v73;while true do if (v67==1) then v72=v34();v73={};for v107=1,v72 do local v108=v32();local v109;if (v108==1) then v109=v32()~=0 ;elseif (v108==(4 -2)) then v109=v35();elseif (v108==(1 + 2)) then v109=v36();end v73[v107]=v109;end v71[3]=v32();v67=2;end if (v67==0) then v68={};v69={};v70={};v71={v68,v69,nil,v70};v67=1;end if (v67==2) then for v111=1 + 0 ,v34() do local v112=v32();if (v31(v112,1,1 + 0 )==0) then local v121=0;local v122;local v123;local v124;while true do if (1==v121) then v124={v33(),v33(),nil,nil};if (v122==0) then v124[3]=v33();v124[4]=v33();elseif (v122==(1 + 0)) then v124[888 -(261 + 624) ]=v34();elseif (v122==2) then v124[3]=v34() -(2^16) ;elseif (v122==3) then local v137=0;while true do if (v137==0) then v124[3]=v34() -(2^16) ;v124[6 -2 ]=v33();break;end end end v121=2;end if (v121==2) then if (v31(v123,1,1)==1) then v124[2]=v73[v124[2]];end if (v31(v123,2,2)==1) then v124[3]=v73[v124[3]];end v121=3;end if (v121==3) then if (v31(v123,3,3)==(878 -(282 + 595))) then v124[4]=v73[v124[4]];end v68[v111]=v124;break;end if (v121==0) then v122=v31(v112,2,3);v123=v31(v112,4,6);v121=1;end end end end for v113=1638 -(1523 + 114) ,v34() do v69[v113-(1081 -(1020 + 60)) ]=v39();end return v71;end end end local function v40(v74,v75,v76) local v77=v74[1];local v78=v74[2];local v79=v74[3];return function(...) local v80=v77;local v81=v78;local v82=v79;local v83=v38;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v20("#",...) -(1424 -(630 + 793)) ;local v89={};local v90={};for v100=0,v88 do if (v100>=v82) then v86[v100-v82 ]=v87[v100 + 1 ];else v90[v100]=v87[v100 + (1 -0) ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do local v101=0;while true do if (v101==1) then if (v93<=42) then if (v93<=20) then if (v93<=(30 -21)) then if (v93<=4) then if (v93<=1) then if (v93==0) then v90[v92[1067 -(68 + 997) ]]=v90[v92[3]] + v92[4] ;else local v139=v92[3];local v140=v90[v139];for v219=v139 + (4 -3) ,v92[4] do v140=v140   .. v90[v219] ;end v90[v92[2]]=v140;end elseif (v93<=2) then v90[v92[2]]=v92[3] + v90[v92[4]] ;elseif (v93==3) then local v223=v92[1 + 1 ];local v224,v225=v83(v90[v223](v21(v90,v223 + 1 ,v85)));v85=(v225 + v223) -1 ;local v226=0;for v309=v223,v85 do local v310=0;while true do if (v310==0) then v226=v226 + 1 ;v90[v309]=v224[v226];break;end end end else local v227=v92[6 -4 ];local v228,v229=v83(v90[v227](v90[v227 + (1748 -(760 + 987)) ]));v85=(v229 + v227) -1 ;local v230=0;for v311=v227,v85 do v230=v230 + 1 ;v90[v311]=v228[v230];end end elseif (v93<=6) then if (v93==5) then if v90[v92[2]] then v84=v84 + (1271 -(226 + 1044)) ;else v84=v92[12 -9 ];end else v76[v92[3]]=v90[v92[2]];end elseif (v93<=7) then local v145=v92[2];local v146=v90[v145];local v147=v90[v145 + 2 ];if (v147>0) then if (v146>v90[v145 + 1 ]) then v84=v92[3];else v90[v145 + 3 ]=v146;end elseif (v146<v90[v145 + 1 ]) then v84=v92[3];else v90[v145 + 3 ]=v146;end elseif (v93==8) then local v232=v92[2];do return v21(v90,v232,v232 + v92[3] );end elseif (v92[1915 -(1789 + 124) ]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=14) then if (v93<=(777 -(745 + 21))) then if (v93==10) then v90[v92[2]]=v90[v92[3]][v92[121 -(32 + 85) ]];else v90[v92[2 + 0 ]]=v90[v92[3]][v92[4]];end elseif (v93<=12) then local v152=0;local v153;while true do if (v152==0) then v153=v92[2];v90[v153]=v90[v153]();break;end end elseif (v93>13) then local v233=0;local v234;local v235;while true do if (v233==0) then v234=v92[2];v235=v90[v234];v233=1;end if (v233==1) then for v408=v234 + 1 ,v85 do v15(v235,v90[v408]);end break;end end else local v236=v92[2];local v237=v90[v236 + 2 ];local v238=v90[v236] + v237 ;v90[v236]=v238;if (v237>0) then if (v238<=v90[v236 + (3 -2) ]) then local v409=0;while true do if (v409==0) then v84=v92[3];v90[v236 + 3 ]=v238;break;end end end elseif (v238>=v90[v236 + 1 + 0 ]) then local v410=0;while true do if (0==v410) then v84=v92[3];v90[v236 + 3 ]=v238;break;end end end end elseif (v93<=17) then if (v93<=15) then v90[v92[2]]={};elseif (v93==16) then local v240=0;local v241;while true do if (v240==0) then v241=v92[2];do return v21(v90,v241,v85);end break;end end else v90[v92[2]]=v76[v92[3]];end elseif (v93<=18) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>19) then v90[v92[959 -(892 + 65) ]]=v90[v92[3]]%v90[v92[1 + 3 ]] ;else local v246=v92[2];local v247=v90[v246];local v248=v92[3];for v316=1,v248 do v247[v316]=v90[v246 + v316 ];end end elseif (v93<=31) then if (v93<=25) then if (v93<=22) then if (v93>(49 -28)) then v90[v92[2 + 0 ]][v90[v92[3]]]=v92[4];else local v157=0;local v158;local v159;while true do if (v157==1) then for v345=v158 + 1 ,v92[1059 -(87 + 968) ] do v159=v159   .. v90[v345] ;end v90[v92[2]]=v159;break;end if (v157==0) then v158=v92[3];v159=v90[v158];v157=1;end end end elseif (v93<=23) then local v160=0;local v161;local v162;local v163;local v164;while true do if (v160==0) then v161=v92[2];v162,v163=v83(v90[v161](v90[v161 + 1 ]));v160=1;end if (v160==1) then v85=(v163 + v161) -(4 -3) ;v164=0;v160=2;end if (v160==2) then for v346=v161,v85 do local v347=0;while true do if (v347==0) then v164=v164 + 1 ;v90[v346]=v162[v164];break;end end end break;end end elseif (v93>24) then do return v90[v92[2]]();end elseif (v92[2 + 0 ]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=(51 -23)) then if (v93<=26) then local v165=0;local v166;local v167;local v168;while true do if (v165==2) then for v349=1,v92[4] do v84=v84 + 1 ;local v350=v80[v84];if (v350[2 -1 ]==79) then v168[v349-(1414 -(447 + 966)) ]={v90,v350[3]};else v168[v349-1 ]={v75,v350[3]};end v89[ #v89 + 1 ]=v168;end v90[v92[2]]=v40(v166,v167,v76);break;end if (v165==1) then v168={};v167=v18({},{[v7("\134\28\162\122\187\186\93","\212\217\67\203\20\223\223\37")]=function(v352,v353) local v354=v168[v353];return v354[1][v354[2]];end,[v7("\133\178\166\215\173\132\166\214\191\149","\178\218\237\200")]=function(v355,v356,v357) local v358=v168[v356];v358[1][v358[2]]=v357;end});v165=2;end if (v165==0) then v166=v81[v92[3]];v167=nil;v165=1;end end elseif (v93>(49 -22)) then v90[v92[2]]= #v90[v92[1820 -(1703 + 114) ]];else local v250=v92[703 -(376 + 325) ];do return v90[v250](v21(v90,v250 + 1 ,v92[353 -(87 + 263) ]));end end elseif (v93<=29) then do return v90[v92[2]]();end elseif (v93==30) then local v251=0;local v252;while true do if (v251==0) then v252=v92[2 -0 ];do return v21(v90,v252,v85);end break;end end else local v253=0;local v254;local v255;local v256;while true do if (v253==1) then v256=v92[183 -(67 + 113) ];for v413=1,v256 do v255[v413]=v90[v254 + v413 ];end break;end if (v253==0) then v254=v92[5 -3 ];v255=v90[v254];v253=1;end end end elseif (v93<=36) then if (v93<=33) then if (v93==32) then v90[v92[2]]=v92[3] + v90[v92[4]] ;else local v170=v92[1 + 1 ];v90[v170](v21(v90,v170 + 1 ,v85));end elseif (v93<=34) then v90[v92[2]]= #v90[v92[3]];elseif (v93==(76 -41)) then local v257=0;local v258;local v259;while true do if (v257==1) then v90[v258 + 1 ]=v259;v90[v258]=v259[v92[4]];break;end if (v257==0) then v258=v92[2];v259=v90[v92[17 -(9 + 5) ]];v257=1;end end elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=(415 -(85 + 291))) then if (v93<=37) then v90[v92[2 + 0 ]]=v90[v92[3]];elseif (v93==38) then v90[v92[2]]=v75[v92[7 -4 ]];else local v262=v92[2];v90[v262](v90[v262 + 1 ]);end elseif (v93<=40) then local v174=0;local v175;while true do if (v174==0) then v175=v92[2 + 0 ];v90[v175]=v90[v175](v90[v175 + 1 ]);break;end end elseif (v93>41) then do return;end else local v263=0;local v264;local v265;local v266;local v267;while true do if (0==v263) then v264=v92[7 -5 ];v265,v266=v83(v90[v264](v21(v90,v264 + 1 ,v85)));v263=1;end if (v263==2) then for v416=v264,v85 do local v417=0;while true do if (v417==0) then v267=v267 + 1 ;v90[v416]=v265[v267];break;end end end break;end if (v263==1) then v85=(v266 + v264) -1 ;v267=0 + 0 ;v263=2;end end end elseif (v93<=63) then if (v93<=52) then if (v93<=(1227 -(1123 + 57))) then if (v93<=(36 + 8)) then if (v93==43) then do return v90[v92[2]];end else local v176=0;local v177;local v178;local v179;while true do if (v176==2) then for v361=1,v92[4] do local v362=0;local v363;while true do if (v362==0) then v84=v84 + (1 -0) ;v363=v80[v84];v362=1;end if (v362==1) then if (v363[1]==79) then v179[v361-1 ]={v90,v363[3]};else v179[v361-1 ]={v75,v363[3]};end v89[ #v89 + 1 ]=v179;break;end end end v90[v92[2]]=v40(v177,v178,v76);break;end if (v176==1) then v179={};v178=v18({},{[v7("\137\138\239\222\178\176\254","\176\214\213\134")]=function(v364,v365) local v366=0;local v367;while true do if (0==v366) then v367=v179[v365];return v367[953 -(802 + 150) ][v367[256 -(163 + 91) ]];end end end,[v7("\203\146\184\209\191\95\87\240\168\174","\57\148\205\214\180\200\54")]=function(v368,v369,v370) local v371=v179[v369];v371[2 -1 ][v371[2]]=v370;end});v176=2;end if (v176==0) then v177=v81[v92[3]];v178=nil;v176=1;end end end elseif (v93<=45) then local v180=v92[2];v90[v180](v21(v90,v180 + 1 ,v85));elseif (v93>(13 + 33)) then local v268=0;local v269;while true do if (v268==0) then v269=v92[2];v90[v269](v90[v269 + 1 ]);break;end end elseif  not v90[v92[2]] then v84=v84 + (998 -(915 + 82)) ;else v84=v92[3];end elseif (v93<=49) then if (v93>(135 -87)) then local v181=0;local v182;local v183;while true do if (v181==0) then v182=v92[2];v183=v90[v182];v181=1;end if (v181==1) then for v374=v182 + 1 + 0 ,v92[10 -7 ] do v15(v183,v90[v374]);end break;end end else local v184=v92[2];local v185=v90[v92[3]];v90[v184 + 1 ]=v185;v90[v184]=v185[v92[4]];end elseif (v93<=50) then local v189=0;local v190;local v191;local v192;local v193;while true do if (v189==0) then v190=v92[2];v191,v192=v83(v90[v190](v21(v90,v190 + 1 ,v92[3])));v189=1;end if (2==v189) then for v375=v190,v85 do local v376=0;while true do if (v376==0) then v193=v193 + 1 ;v90[v375]=v191[v193];break;end end end break;end if (v189==1) then v85=(v192 + v190) -1 ;v193=0;v189=2;end end elseif (v93>(77 -26)) then do return v90[v92[2]];end else local v270=v92[2 -0 ];v90[v270]=v90[v270](v21(v90,v270 + 1 + 0 ,v92[3]));end elseif (v93<=(78 -21)) then if (v93<=54) then if (v93>53) then v90[v92[2]]=v92[3];else local v196=0;local v197;local v198;local v199;local v200;while true do if (v196==1) then v85=(v199 + v197) -1 ;v200=0;v196=2;end if (v196==0) then v197=v92[2];v198,v199=v83(v90[v197](v21(v90,v197 + 1 ,v92[3])));v196=1;end if (v196==2) then for v377=v197,v85 do local v378=0;while true do if (v378==0) then v200=v200 + 1 ;v90[v377]=v198[v200];break;end end end break;end end end elseif (v93<=(52 + 3)) then for v220=v92[1189 -(1069 + 118) ],v92[1477 -(1329 + 145) ] do v90[v220]=nil;end elseif (v93>56) then v90[v92[2]]={};else local v273=0;local v274;while true do if (v273==0) then v274=v92[2];v90[v274]=v90[v274]();break;end end end elseif (v93<=(136 -76)) then if (v93<=58) then local v201=0;local v202;while true do if (v201==0) then v202=v92[2];v90[v202]=v90[v202](v21(v90,v202 + (972 -(140 + 831)) ,v85));break;end end elseif (v93>(128 -69)) then v90[v92[2]]=v90[v92[1 + 2 ]]%v92[6 -2 ] ;else local v276=v92[2];v90[v276]=v90[v276](v21(v90,v276 + 1 ,v85));end elseif (v93<=61) then v90[v92[2]]=v76[v92[3]];elseif (v93==62) then v90[v92[2]]=v75[v92[3]];else local v280=v92[2];local v281={v90[v280](v90[v280 + 1 ])};local v282=0;for v335=v280,v92[4] do v282=v282 + 1 ;v90[v335]=v281[v282];end end elseif (v93<=(792 -(15 + 703))) then if (v93<=(32 + 36)) then if (v93<=65) then if (v93==64) then local v205=v92[2];local v206=v90[v205 + 2 + 0 ];local v207=v90[v205] + v206 ;v90[v205]=v207;if (v206>0) then if (v207<=v90[v205 + 1 ]) then local v379=0;while true do if (v379==0) then v84=v92[794 -(368 + 423) ];v90[v205 + (1724 -(345 + 1376)) ]=v207;break;end end end elseif (v207>=v90[v205 + 1 ]) then v84=v92[3];v90[v205 + (9 -6) ]=v207;end else local v209=v92[2];local v210=v90[v209];local v211=v90[v209 + 2 ];if (v211>0) then if (v210>v90[v209 + (689 -(198 + 490)) ]) then v84=v92[3];else v90[v209 + 3 ]=v210;end elseif (v210<v90[v209 + (19 -(10 + 8)) ]) then v84=v92[3];else v90[v209 + 3 ]=v210;end end elseif (v93<=66) then if (v90[v92[2]]==v92[4]) then v84=v84 + (3 -2) ;else v84=v92[445 -(416 + 26) ];end elseif (v93>67) then v90[v92[2]][v90[v92[3]]]=v90[v92[9 -5 ]];else local v286=0;local v287;while true do if (v286==0) then v287=v92[2];v90[v287]=v90[v287](v21(v90,v287 + 1 ,v92[9 -6 ]));break;end end end elseif (v93<=71) then if (v93<=(1275 -(696 + 510))) then v90[v92[2]]=v92[2 + 1 ];elseif (v93>(146 -76)) then v90[v92[2]][v90[v92[3]]]=v92[4];else v90[v92[2]][v90[v92[3]]]=v90[v92[4]];end elseif (v93<=72) then v90[v92[2]]=v90[v92[3]] + v92[4] ;elseif (v93>(128 -55)) then v76[v92[3]]=v90[v92[2]];else v84=v92[1265 -(1091 + 171) ];end elseif (v93<=79) then if (v93<=76) then if (v93==(13 + 62)) then do return;end elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=77) then v90[v92[2]]=v90[v92[3]]%v92[4] ;elseif (v93==(516 -(145 + 293))) then v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;else v90[v92[2]]=v90[v92[3]];end elseif (v93<=82) then if (v93<=80) then local v216=v92[2];local v217=v90[v216];for v222=v216 + 1 ,v85 do v15(v217,v90[v222]);end elseif (v93==81) then for v338=v92[2],v92[3] do v90[v338]=nil;end else local v299=0;local v300;local v301;local v302;while true do if (v299==0) then v300=v92[2];v301={v90[v300](v90[v300 + 1 ])};v299=1;end if (v299==1) then v302=0;for v418=v300,v92[4] do local v419=0;while true do if (v419==0) then v302=v302 + 1 ;v90[v418]=v301[v302];break;end end end break;end end end elseif (v93<=83) then v84=v92[1489 -(998 + 488) ];elseif (v93==84) then local v303=0;local v304;while true do if (v303==0) then v304=v92[1 + 1 ];do return v90[v304](v21(v90,v304 + 1 ,v92[3]));end break;end end else local v305=v92[2];v90[v305]=v90[v305](v90[v305 + 1 ]);end v84=v84 + 1 ;break;end if (v101==0) then v92=v80[v84];v93=v92[1];v101=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
       
